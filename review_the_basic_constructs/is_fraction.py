''' 
    Будем считать обыкновенной дробью последовательность из одной или более
цифр, за которой следует прямая косая черта "/" , а затем — последовательность
из одной или более цифр, хотя бы одна из которых отлична от нуля (знаменатель
не может равняться нулю). Последовательность, представляющая собой
обыкновенную дробь, может начинаться с необязательного символа дефиса "-".
    Реализуйте функцию is_fraction() , которая принимает один аргумент:
        string — строка, содержащая произвольный набор символов
    Функция должна возвращать True, если строка string представляет собой
обыкновенную дробь, или False в противном случае.
'''
import re

def is_fraction(s: str) -> bool:
    pattern = r'^-?\d+\/[1-9]\d*$'
    return bool(re.match(pattern, s))


print(is_fraction('1000/1')) # True
print(is_fraction('-54/9'))  # True
print(is_fraction('71'))     # False
print(is_fraction('1 / 82')) # False
print(is_fraction('1/0'))    # False